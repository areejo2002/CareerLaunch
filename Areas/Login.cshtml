@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
    Layout = "_Layout";
}
<style>
    footer {
        display: none !important;
    }
</style>
<!-- Professional split-screen login design with footer line removed -->
<style>
    :root {
        --bs-primary: #00574C;
        --bs-primary-rgb: 0,87,76;
    }

    html, body {
        height: 100%;
        margin: 0;
    }

    .login-wrapper {
        display: flex;
        min-height: 100vh;
        overflow: hidden;
    }
    /* Left gradient panel */
    .login-left {
        flex: 1;
        background: linear-gradient(135deg, #00574C 0%, #009688 100%);
        color: white;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        text-align: center;
    }

        .login-left h1 {
            font-size: 3rem;
            font-weight: 700;
            margin-bottom: 1rem;
        }

        .login-left p {
            font-size: 1.25rem;
            line-height: 1.4;
            max-width: 360px;
        }
    /* Right form panel */
    .login-right {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        background: #f5f7fa;
    }
    /* Glassmorphism card */
    .login-card {
        width: 100%;
        max-width: 420px;
        background: rgba(255,255,255,0.85);
        backdrop-filter: blur(10px);
        border: none;
        border-radius: 1rem;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        overflow: hidden;
    }

        .login-card .card-body {
            padding: 2rem;
        }
        /* Remove white line under footer */
        .login-card .card-footer {
            background: transparent;
            border-top: none;
        }
        /* Input focus and labels */
        .login-card .form-floating > .form-control:focus {
            box-shadow: 0 0 0 0.2rem rgba(var(--bs-primary-rgb), 0.25);
        }

        .login-card .form-floating > label {
            color: #495057;
        }
        /* Button styling */
        .login-card .btn-primary {
            background: var(--bs-primary);
            border-color: var(--bs-primary);
        }

            .login-card .btn-primary:hover {
                background: #004f45;
                border-color: #004f45;
            }
</style>

<div class="login-wrapper">
    <!-- Left panel (hidden on small devices) -->
    <div class="login-left d-none d-md-flex">
        <i class="bi bi-person-circle fs-1 mb-3"></i>
        <h1>Welcome Back!</h1>
        <p>Log in to access your personalized resume &amp; portfolio builder. Create, edit, and download professional documents instantly.</p>
    </div>

    <!-- Right panel: the form -->
    <div class="login-right">
        <div class="card login-card">
            <div class="card-body">
                <h3 class="text-center text-primary fw-bold mb-4">Account Login</h3>
                <form method="post" class="needs-validation" novalidate>
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                    <!-- Email -->
                    <div class="form-floating mb-4">
                        <input asp-for="Input.Email"
                               class="form-control"
                               placeholder="name@example.com"
                               type="email"
                               required />
                        <label asp-for="Input.Email">
                            <i class="bi bi-envelope-fill me-1"></i>Email
                        </label>
                        <div class="invalid-feedback">
                            @Html.ValidationMessageFor(m => m.Input.Email)
                        </div>
                    </div>

                    <!-- Password -->
                    <div class="form-floating mb-4">
                        <input asp-for="Input.Password"
                               class="form-control"
                               placeholder="Password"
                               type="password"
                               required />
                        <label asp-for="Input.Password">
                            <i class="bi bi-lock-fill me-1"></i>Password
                        </label>
                        <div class="invalid-feedback">
                            @Html.ValidationMessageFor(m => m.Input.Password)
                        </div>
                    </div>

                    <!-- Remember Me -->
                    <div class="form-check form-switch mb-4">
                        <input asp-for="Input.RememberMe" class="form-check-input" />
                        <label asp-for="Input.RememberMe" class="form-check-label">
                            Remember Me
                        </label>
                    </div>

                    <!-- Submit -->
                    <button type="submit" class="btn btn-primary btn-lg w-100 py-2 mb-3">
                        Log in
                    </button>

                    <!-- Links -->
                    <div class="d-flex justify-content-between small">
                        <a asp-page="./ForgotPassword">Forgot password?</a>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register</a>
                    </div>
                </form>
            </div>

            @if ((Model.ExternalLogins?.Count ?? 0) > 0)
            {
                <div class="card-footer p-4">
                    <h6 class="text-center text-secondary mb-3">Or log in with</h6>
                    <div class="d-grid gap-2">
                        @foreach (var provider in Model.ExternalLogins!)
                        {
                            <form asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                                <button type="submit"
                                        class="btn btn-outline-primary d-flex align-items-center justify-content-center py-2">
                                    <i class="bi bi-box-arrow-in-right me-2"></i>
                                    @provider.DisplayName
                                </button>
                            </form>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function () {
          'use strict';
          var forms = document.querySelectorAll('.needs-validation');
          Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
              if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
              }
              form.classList.add('was-validated');
            }, false);
          });
        })();
    </script>
}
