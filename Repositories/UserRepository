using System.Collections.Generic;
using System.Threading.Tasks;
using CareerLaunchpad.Interfaces;
using CareerLaunchpad.Models;
using Microsoft.EntityFrameworkCore;

namespace CareerLaunchpad.Repositories
{
    public class UserRepository :IUserRepository
    {
            private readonly ApplicationDbContext _db;
            public UserRepository(ApplicationDbContext db) => _db = db;

            public async Task<IEnumerable<Person>> GetAllAsync() =>
                await _db.Users.ToListAsync();

            public async Task<Person> GetByIdAsync(string id) =>
                await _db.Users.FindAsync(id);

            public async Task UpdateAsync(Person user)
            {
                _db.Users.Update(user);
                await _db.SaveChangesAsync();
            }

            public async Task DeleteAsync(string id)
            {
                var user = await _db.Users.FindAsync(id);
                if (user != null)
                {
                    _db.Users.Remove(user);
                    await _db.SaveChangesAsync();
                }
            }
        }


        public interface IUserRepository
        {
            Task<IEnumerable<Person>> GetAllAsync();
            Task<Person> GetByIdAsync(string id);
            Task UpdateAsync(Person user);
            Task DeleteAsync(string id);
        }
    }
