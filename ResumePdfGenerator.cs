using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using CareerLaunchpad.Models;

public class ResumePdfGenerator
{
    public static byte[] GeneratePdf(Resume resume)
    {
        var document = Document.Create(container =>
        {
            container.Page(page =>
            {
                page.Margin(30);
                page.Size(PageSizes.A4);

                page.Header()
                    .Text($"{resume.FirstName} {resume.LastName}")
                    .SemiBold().FontSize(24).FontColor(Colors.Blue.Medium);

                page.Content()
                    .Column(col =>
                    {
                        col.Spacing(12);

                        col.Item().Text($"Email: {resume.Email}   |   Phone: {resume.PhoneNumber}").FontSize(12);

                        col.Item().Text("Bio")
                            .Bold().FontSize(16).FontColor(Colors.Grey.Darken2);
                        col.Item().Text(resume.Bio ?? "-").FontSize(11);

                        // Education Section
                        if (resume.Educations?.Any() == true)
                        {
                            col.Item().Text("Education")
                                .Bold().FontSize(16).FontColor(Colors.Blue.Darken2);
                            foreach (var edu in resume.Educations)
                            {
                                col.Item().Text($"{edu.DegreeType ?? ""} in {edu.Major ?? ""} - {edu.CollageName ?? ""} ({edu.StartDate} to {edu.EndDate})" + (edu.GPA != null ? $" GPA: {edu.GPA}" : ""))
                                    .FontSize(11);
                            }
                        }

                        // Experience Section
                        if (resume.Experiences?.Any() == true)
                        {
                            col.Item().Text("Experience")
                                .Bold().FontSize(16).FontColor(Colors.Blue.Darken2);
                            foreach (var exp in resume.Experiences)
                            {
                                col.Item().Text($"{exp.Title ?? ""} at {exp.Company ?? ""} ({exp.StartDate} to {(exp.IsCurrent == true ? "Present" : exp.EndDate ?? "")})")
                                    .FontSize(11);
                                col.Item().Text($"Duties: {exp.Duties}").Italic().FontSize(10);
                            }
                        }

                        // Certificates
                        if (resume.Certificates?.Any() == true)
                        {
                            col.Item().Text("Certificates")
                                .Bold().FontSize(16).FontColor(Colors.Blue.Darken2);
                            foreach (var cert in resume.Certificates)
                            {
                                col.Item().Text($"{cert.TopicName ?? ""} - {cert.ProviderName ?? ""} ({cert.StartDate} to {cert.EndDate})" + (cert.GPA != null ? $" GPA: {cert.GPA}" : ""))
                                    .FontSize(11);
                            }
                        }

                        // Skills
                        if (resume.Skills?.Any() == true)
                        {
                            col.Item().Text("Skills")
                                .Bold().FontSize(16).FontColor(Colors.Blue.Darken2);
                            col.Item().Text(string.Join(", ", resume.Skills.Select(s => $"{s.SkillName} ({s.SkillType})"))).FontSize(11);
                        }

                        // Languages
                        if (resume.Languages?.Any() == true)
                        {
                            col.Item().Text("Languages")
                                .Bold().FontSize(16).FontColor(Colors.Blue.Darken2);
                            col.Item().Text(string.Join(", ", resume.Languages.Select(l => $"{l.Name} ({l.Level})"))).FontSize(11);
                        }
                    });

                page.Footer()
                    .AlignCenter()
                    .Text(txt =>
                    {
                        txt.Span("Generated by CareerLaunchpad - ").FontSize(10);
                        txt.Hyperlink("https://your-website.com", "careerlaunchpad.com");
                    });
            });
        });

        return document.GeneratePdf();
    }
}
