using System.IO;
using QuestPDF.Fluent;
using QuestPDF.Helpers;
using QuestPDF.Infrastructure;
using CareerLaunchpad.Models;

public static class PortfolioPdfGenerator
{
    /// <summary>
    /// portfolio.PersonalImage: مسار نسبي مثل "/uploads/xxx.jpg"
    /// webRootPath: المسار الفيزيائي لمجلد wwwroot (IWebHostEnvironment.WebRootPath)
    /// </summary>
    public static byte[] GeneratePdf(Portfolio portfolio, string webRootPath)
    {
        // 1) بناء المسار الفيزيائي
        string physicalImagePath = null;
        if (!string.IsNullOrEmpty(portfolio.PersonalImage))
        {
            var relative = portfolio.PersonalImage
                             .TrimStart('~', '/', '\\')
                             .Replace('/', Path.DirectorySeparatorChar);
            physicalImagePath = Path.Combine(webRootPath, relative);
        }

        // 2) تكوين المستند
        return Document.Create(doc =>
        {
            doc.Page(page =>
            {
                page.Margin(30);
                page.Size(PageSizes.A4);

                // ===== Header =====
                page.Header().Row(row =>
                {
                    const float imgWidth = 80;

                    // صورة المستخدم بعرض ثابت، ارتفاع حر
                    if (physicalImagePath != null && File.Exists(physicalImagePath))
                    {
                        row.ConstantItem(imgWidth)
                           .Image(physicalImagePath, ImageScaling.FitWidth);
                    }

                    // اسم المستخدم والمسمى الوظيفي
                    row.RelativeItem().PaddingLeft(16).Column(col =>
                    {
                        col.Item().Text($"{portfolio.FirstName} {portfolio.LastName}")
                            .SemiBold().FontSize(20).FontColor(Colors.Blue.Medium);

                        if (!string.IsNullOrWhiteSpace(portfolio.JobTitle))
                            col.Item().Text(portfolio.JobTitle)
                               .Italic().FontSize(14).FontColor(Colors.Grey.Darken2);
                    });
                });

                // ===== Content =====
                page.Content().Column(col =>
                {
                    col.Spacing(15);

                    if (!string.IsNullOrWhiteSpace(portfolio.Bio))
                    {
                        col.Item().Text("Bio")
                           .Bold().FontSize(16).FontColor(Colors.Grey.Darken3);
                        col.Item().Text(portfolio.Bio).FontSize(12);
                    }

                    if (!string.IsNullOrWhiteSpace(portfolio.ContactInfo))
                    {
                        col.Item().Text("Contact")
                           .Bold().FontSize(16).FontColor(Colors.Grey.Darken3);
                        col.Item().Text(portfolio.ContactInfo).FontSize(12);
                    }

                    if (portfolio.Services?.Any() == true)
                    {
                        col.Item().Text("Services")
                           .Bold().FontSize(16).FontColor(Colors.Blue.Darken2);
                        foreach (var s in portfolio.Services)
                            col.Item().Text($"• {s.ServiceName}: {s.Servicedescription}")
                                .FontSize(11);
                    }

                    if (portfolio.Projects?.Any() == true)
                    {
                        col.Item().Text("Projects")
                           .Bold().FontSize(16).FontColor(Colors.Blue.Darken2);
                        foreach (var p in portfolio.Projects)
                        {
                            col.Item().Text(p.ProjectName)
                               .Bold().FontSize(13);

                            if (!string.IsNullOrWhiteSpace(p.Description))
                                col.Item().Text($"  {p.Description}").FontSize(11);

                            if (p.StartDate != null || p.EndDate != null)
                                col.Item().Text(
                                  $"  Duration: {p.StartDate:yyyy-MM} - {p.EndDate:yyyy-MM}")
                                  .Italic().FontSize(10);
                        }
                    }
                });

                // ===== Footer =====
                page.Footer().AlignCenter().Text(txt =>
                {
                    txt.Span("Generated by CareerLaunchpad - ").FontSize(10);
                    txt.Hyperlink("https://careerlaunchpad.com", "careerlaunchpad.com");
                });
            });
        })
        .GeneratePdf();
    }
}
